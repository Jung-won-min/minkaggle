{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import googleapiclient.discovery\nfrom googleapiclient.errors import HttpError\n\nimport pandas as pd\nimport time\nimport tqdm","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:01:22.426031Z","iopub.execute_input":"2025-05-01T08:01:22.426345Z","iopub.status.idle":"2025-05-01T08:01:22.432083Z","shell.execute_reply.started":"2025-05-01T08:01:22.426323Z","shell.execute_reply":"2025-05-01T08:01:22.431072Z"}},"outputs":[],"execution_count":43},{"cell_type":"code","source":"# YouTube API key\nAPI_KEY = \"AIzaSyDs8fo5xOHfIhmZ0OTcqhdG8dRqRciHBa8\" # YOUR-API-KEY\nyoutube = googleapiclient.discovery.build(\"youtube\", \"v3\", developerKey=API_KEY)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:01:22.439947Z","iopub.execute_input":"2025-05-01T08:01:22.441432Z","iopub.status.idle":"2025-05-01T08:01:23.018007Z","shell.execute_reply.started":"2025-05-01T08:01:22.441392Z","shell.execute_reply":"2025-05-01T08:01:23.016885Z"}},"outputs":[],"execution_count":44},{"cell_type":"code","source":"# Get comments for 1 video. Youtube API allows only up to 100 comments per video\ndef get_top_korean_comments(video_id, max_results=100):\n    comments = []\n    try:\n        request = youtube.commentThreads().list(\n            part=\"snippet\",\n            videoId=video_id,\n            maxResults=max_results,\n            textFormat=\"plainText\"\n        )\n        response = request.execute()\n\n        for item in response['items']:\n            comment = item['snippet']['topLevelComment']['snippet']['textDisplay']\n            comments.append(comment)  \n                \n    except HttpError as e:\n        error_reason = e.resp.get('reason')\n        if error_reason == 'commentsDisabled':\n            print(f\"Comments are disabled for video {video_id}. Skipping.\")\n        elif error_reason == 'quotaExceeded':\n            print(\"Quota exceeded. Saving collected data...\")\n            save_data_to_csv(video_comments)\n            exit()\n        else:\n            print(f\"An error occurred: {e}\")\n    \n    return comments","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:01:23.019612Z","iopub.execute_input":"2025-05-01T08:01:23.019947Z","iopub.status.idle":"2025-05-01T08:01:23.033649Z","shell.execute_reply.started":"2025-05-01T08:01:23.019922Z","shell.execute_reply":"2025-05-01T08:01:23.032404Z"}},"outputs":[],"execution_count":45},{"cell_type":"code","source":"# Get video ids for query. Youtube API allows only up to 50 videos\n\ndef get_video_ids(query, max_results=100):\n    video_ids = []\n    results_per_page = 50  # YouTube API maxResults \n    pages = (max_results + results_per_page - 1) // results_per_page  # calculate #pages\n    next_page_token = None\n    \n    for _ in range(pages): # call api as many times as #pages\n        try:\n            request = youtube.search().list(\n                q=query,\n                part=\"snippet\",\n                maxResults=results_per_page,\n                type=\"video\",\n                pageToken=next_page_token\n            )\n            response = request.execute()      \n\n            # Only check if 'id' key exists and 'videoId' is accessible\n            for item in response['items']:\n                if isinstance(item, dict) and 'id' in item and 'videoId' in item['id']:\n                    video_ids.append(item['id']['videoId'])\n\n            next_page_token = response.get('nextPageToken')\n            if not next_page_token:\n                break\n\n        except HttpError as e:\n            error_reason = e.resp.get('reason')\n            if error_reason == 'quotaExceeded':\n                print(\"Quota exceeded. Saving collected data...\")\n                save_data_to_csv(video_comments)\n                exit()\n            else:\n                print(f\"An error occurred: {e}\")\n                \n    return video_ids[:max_results]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:01:23.035322Z","iopub.execute_input":"2025-05-01T08:01:23.035769Z","iopub.status.idle":"2025-05-01T08:01:23.055729Z","shell.execute_reply.started":"2025-05-01T08:01:23.035736Z","shell.execute_reply":"2025-05-01T08:01:23.054622Z"}},"outputs":[],"execution_count":46},{"cell_type":"code","source":"# Make data to dataframe\n# video_comments looks like: {\"4DUYBXdUYzA\": [\"와 재밌다\", \"재미없다\", ]}\ndef save_data_to_csv(video_comments):    \n    \n    data = {\"Video_ID\": [], \"Comment\": []}\n    \n    for video_id, comments in video_comments.items():\n        for comment in comments:\n            data[\"Video_ID\"].append(video_id)\n            data[\"Comment\"].append(comment)\n\n    df = pd.DataFrame(data)\n    \n    # Export to CSV \n    df.to_csv(\"youtube_comments.csv\", index=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:01:23.057522Z","iopub.execute_input":"2025-05-01T08:01:23.057942Z","iopub.status.idle":"2025-05-01T08:01:23.085073Z","shell.execute_reply.started":"2025-05-01T08:01:23.057907Z","shell.execute_reply":"2025-05-01T08:01:23.083725Z"}},"outputs":[],"execution_count":47},{"cell_type":"code","source":"participants = [ \"페이커\", \"도란\", \"오너\", \"구마유시\", \"캐리아\", \"쇼메이커\", \"캐니언\", \"쵸비\", \"룰러\", \"기인\", \"데프트\", \"비디디\", \"커즈\", \"덕담\", \"제우스\", \"피넛\", \"제카\", \"바이퍼\" ]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:01:23.088346Z","iopub.execute_input":"2025-05-01T08:01:23.088773Z","iopub.status.idle":"2025-05-01T08:01:23.107973Z","shell.execute_reply.started":"2025-05-01T08:01:23.088744Z","shell.execute_reply":"2025-05-01T08:01:23.106761Z"}},"outputs":[],"execution_count":48},{"cell_type":"code","source":"video_comments = {}\n# Ex: {\"4DUYBXdUYzA\": [\"와 재밌다\", \"재미없다\", ]}\n\nstart = time.time()\nquery_basic = \"LCK\"\n\nfor participant in tqdm.tqdm(participants):\n    query = query_baisic + \" \" + participant \n\n    try:\n        video_ids = get_video_ids(query, max_results=50) \n\n        for video_id in video_ids:\n            comments = get_top_korean_comments(video_id)\n            video_comments[video_id] = comments\n    except HttpError as e:\n        if e.resp.get('reason') == 'quotaExceeded':\n            print(\"Quota exceeded. Saving collected data...\")\n            save_data_to_csv(video_comments)\n            exit()\n\n    end = time.time()    \n    print(f\"{end - start}s for query: {query}\")    \n\nsave_data_to_csv(video_comments)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:01:23.109297Z","iopub.execute_input":"2025-05-01T08:01:23.109759Z","iopub.status.idle":"2025-05-01T08:02:47.499880Z","shell.execute_reply.started":"2025-05-01T08:01:23.109726Z","shell.execute_reply":"2025-05-01T08:02:47.498224Z"}},"outputs":[{"name":"stderr","text":"  6%|▌         | 1/18 [00:05<01:32,  5.42s/it]","output_type":"stream"},{"name":"stdout","text":"5.420459270477295s for query: LCK 페이커\n","output_type":"stream"},{"name":"stderr","text":" 11%|█         | 2/18 [00:10<01:23,  5.21s/it]","output_type":"stream"},{"name":"stdout","text":"10.48533582687378s for query: LCK 도란\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 3/18 [00:15<01:13,  4.92s/it]","output_type":"stream"},{"name":"stdout","text":"15.053235054016113s for query: LCK 오너\nAn error occurred: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=rknFS4mB48w&maxResults=100&textFormat=plainText&key=AIzaSyDs8fo5xOHfIhmZ0OTcqhdG8dRqRciHBa8&alt=json returned \"The video identified by the <code><a href=\"/youtube/v3/docs/commentThreads/list#videoId\">videoId</a></code> parameter has disabled comments.\". Details: \"[{'message': 'The video identified by the <code><a href=\"/youtube/v3/docs/commentThreads/list#videoId\">videoId</a></code> parameter has disabled comments.', 'domain': 'youtube.commentThread', 'reason': 'commentsDisabled', 'location': 'videoId', 'locationType': 'parameter'}]\">\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 4/18 [00:20<01:11,  5.11s/it]","output_type":"stream"},{"name":"stdout","text":"20.45929980278015s for query: LCK 구마유시\n","output_type":"stream"},{"name":"stderr","text":" 28%|██▊       | 5/18 [00:28<01:18,  6.04s/it]","output_type":"stream"},{"name":"stdout","text":"28.15524196624756s for query: LCK 캐리아\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 6/18 [00:32<01:04,  5.41s/it]","output_type":"stream"},{"name":"stdout","text":"32.323832273483276s for query: LCK 쇼메이커\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▉      | 7/18 [00:35<00:53,  4.83s/it]","output_type":"stream"},{"name":"stdout","text":"35.956034898757935s for query: LCK 캐니언\n","output_type":"stream"},{"name":"stderr","text":" 44%|████▍     | 8/18 [00:40<00:48,  4.85s/it]","output_type":"stream"},{"name":"stdout","text":"40.846742391586304s for query: LCK 쵸비\nAn error occurred: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=wYFtEq1MES0&maxResults=100&textFormat=plainText&key=AIzaSyDs8fo5xOHfIhmZ0OTcqhdG8dRqRciHBa8&alt=json returned \"The video identified by the <code><a href=\"/youtube/v3/docs/commentThreads/list#videoId\">videoId</a></code> parameter has disabled comments.\". Details: \"[{'message': 'The video identified by the <code><a href=\"/youtube/v3/docs/commentThreads/list#videoId\">videoId</a></code> parameter has disabled comments.', 'domain': 'youtube.commentThread', 'reason': 'commentsDisabled', 'location': 'videoId', 'locationType': 'parameter'}]\">\n","output_type":"stream"},{"name":"stderr","text":" 50%|█████     | 9/18 [00:44<00:41,  4.56s/it]","output_type":"stream"},{"name":"stdout","text":"44.775068044662476s for query: LCK 룰러\n","output_type":"stream"},{"name":"stderr","text":" 56%|█████▌    | 10/18 [00:48<00:35,  4.38s/it]","output_type":"stream"},{"name":"stdout","text":"48.75836205482483s for query: LCK 기인\n","output_type":"stream"},{"name":"stderr","text":" 61%|██████    | 11/18 [00:53<00:30,  4.34s/it]","output_type":"stream"},{"name":"stdout","text":"53.008829832077026s for query: LCK 데프트\n","output_type":"stream"},{"name":"stderr","text":" 67%|██████▋   | 12/18 [00:57<00:26,  4.36s/it]","output_type":"stream"},{"name":"stdout","text":"57.425447940826416s for query: LCK 비디디\nAn error occurred: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=16nccHJjvv8&maxResults=100&textFormat=plainText&key=AIzaSyDs8fo5xOHfIhmZ0OTcqhdG8dRqRciHBa8&alt=json returned \"The video identified by the <code><a href=\"/youtube/v3/docs/commentThreads/list#videoId\">videoId</a></code> parameter has disabled comments.\". Details: \"[{'message': 'The video identified by the <code><a href=\"/youtube/v3/docs/commentThreads/list#videoId\">videoId</a></code> parameter has disabled comments.', 'domain': 'youtube.commentThread', 'reason': 'commentsDisabled', 'location': 'videoId', 'locationType': 'parameter'}]\">\n","output_type":"stream"},{"name":"stderr","text":" 72%|███████▏  | 13/18 [01:02<00:22,  4.47s/it]","output_type":"stream"},{"name":"stdout","text":"62.13082265853882s for query: LCK 커즈\n","output_type":"stream"},{"name":"stderr","text":" 78%|███████▊  | 14/18 [01:06<00:18,  4.53s/it]","output_type":"stream"},{"name":"stdout","text":"66.80707168579102s for query: LCK 덕담\n","output_type":"stream"},{"name":"stderr","text":" 83%|████████▎ | 15/18 [01:11<00:13,  4.64s/it]","output_type":"stream"},{"name":"stdout","text":"71.69364929199219s for query: LCK 제우스\n","output_type":"stream"},{"name":"stderr","text":" 89%|████████▉ | 16/18 [01:15<00:08,  4.44s/it]","output_type":"stream"},{"name":"stdout","text":"75.6869888305664s for query: LCK 피넛\nAn error occurred: <HttpError 403 when requesting https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=Gl6ggNBrSj0&maxResults=100&textFormat=plainText&key=AIzaSyDs8fo5xOHfIhmZ0OTcqhdG8dRqRciHBa8&alt=json returned \"The video identified by the <code><a href=\"/youtube/v3/docs/commentThreads/list#videoId\">videoId</a></code> parameter has disabled comments.\". Details: \"[{'message': 'The video identified by the <code><a href=\"/youtube/v3/docs/commentThreads/list#videoId\">videoId</a></code> parameter has disabled comments.', 'domain': 'youtube.commentThread', 'reason': 'commentsDisabled', 'location': 'videoId', 'locationType': 'parameter'}]\">\n","output_type":"stream"},{"name":"stderr","text":" 94%|█████████▍| 17/18 [01:20<00:04,  4.47s/it]","output_type":"stream"},{"name":"stdout","text":"80.20879077911377s for query: LCK 제카\n","output_type":"stream"},{"name":"stderr","text":"100%|██████████| 18/18 [01:24<00:00,  4.68s/it]","output_type":"stream"},{"name":"stdout","text":"84.21054673194885s for query: LCK 바이퍼\n","output_type":"stream"},{"name":"stderr","text":"\n","output_type":"stream"}],"execution_count":49},{"cell_type":"markdown","source":"# Merge youtube_comments with movie_rating_dataset","metadata":{}},{"cell_type":"code","source":"comments = pd.read_csv(\"youtube_comments.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:47.501038Z","iopub.execute_input":"2025-05-01T08:02:47.501307Z","iopub.status.idle":"2025-05-01T08:02:47.622913Z","shell.execute_reply.started":"2025-05-01T08:02:47.501281Z","shell.execute_reply":"2025-05-01T08:02:47.621826Z"}},"outputs":[],"execution_count":50},{"cell_type":"code","source":"comments.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:47.623929Z","iopub.execute_input":"2025-05-01T08:02:47.624196Z","iopub.status.idle":"2025-05-01T08:02:47.635824Z","shell.execute_reply.started":"2025-05-01T08:02:47.624176Z","shell.execute_reply":"2025-05-01T08:02:47.634871Z"}},"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"      Video_ID                                            Comment\n0  yhrIGG4Uk8g                                                미쳒다\n1  yhrIGG4Uk8g                                    봐도모르겠넹 페이커캐릭이먼지\n2  yhrIGG4Uk8g  롤이라는 게임이 유명한 게임이라는것도 도움이 되었겠지만 우리나라 사람들이 게임 진짜...\n3  yhrIGG4Uk8g                                       전략은 피지컬을 이긴다\n4  yhrIGG4Uk8g                                     클템 해설 존나 듣기 싫다","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Video_ID</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>미쳒다</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>봐도모르겠넹 페이커캐릭이먼지</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>롤이라는 게임이 유명한 게임이라는것도 도움이 되었겠지만 우리나라 사람들이 게임 진짜...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>전략은 피지컬을 이긴다</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>클템 해설 존나 듣기 싫다</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":51},{"cell_type":"code","source":"import urllib.request\n# download naver movie ratings dataset\nurllib.request.urlretrieve(\"https://raw.githubusercontent.com/e9t/nsmc/master/ratings.txt\", filename=\"ratings.txt\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:47.637325Z","iopub.execute_input":"2025-05-01T08:02:47.637867Z","iopub.status.idle":"2025-05-01T08:02:47.967543Z","shell.execute_reply.started":"2025-05-01T08:02:47.637837Z","shell.execute_reply":"2025-05-01T08:02:47.966531Z"}},"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"('ratings.txt', <http.client.HTTPMessage at 0x7977d4922310>)"},"metadata":{}}],"execution_count":52},{"cell_type":"code","source":"movie_data = pd.read_table('ratings.txt')\nmovie_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:47.968604Z","iopub.execute_input":"2025-05-01T08:02:47.969208Z","iopub.status.idle":"2025-05-01T08:02:48.553155Z","shell.execute_reply.started":"2025-05-01T08:02:47.969185Z","shell.execute_reply":"2025-05-01T08:02:48.552203Z"}},"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"         id                                           document  label\n0   8112052                                어릴때보고 지금다시봐도 재밌어요ㅋㅋ      1\n1   8132799  디자인을 배우는 학생으로, 외국디자이너와 그들이 일군 전통을 통해 발전해가는 문화산...      1\n2   4655635               폴리스스토리 시리즈는 1부터 뉴까지 버릴께 하나도 없음.. 최고.      1\n3   9251303  와.. 연기가 진짜 개쩔구나.. 지루할거라고 생각했는데 몰입해서 봤다.. 그래 이런...      1\n4  10067386                        안개 자욱한 밤하늘에 떠 있는 초승달 같은 영화.      1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>document</th>\n      <th>label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>8112052</td>\n      <td>어릴때보고 지금다시봐도 재밌어요ㅋㅋ</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>8132799</td>\n      <td>디자인을 배우는 학생으로, 외국디자이너와 그들이 일군 전통을 통해 발전해가는 문화산...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4655635</td>\n      <td>폴리스스토리 시리즈는 1부터 뉴까지 버릴께 하나도 없음.. 최고.</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9251303</td>\n      <td>와.. 연기가 진짜 개쩔구나.. 지루할거라고 생각했는데 몰입해서 봤다.. 그래 이런...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10067386</td>\n      <td>안개 자욱한 밤하늘에 떠 있는 초승달 같은 영화.</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":53},{"cell_type":"code","source":"comments.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:48.554024Z","iopub.execute_input":"2025-05-01T08:02:48.554316Z","iopub.status.idle":"2025-05-01T08:02:48.562661Z","shell.execute_reply.started":"2025-05-01T08:02:48.554290Z","shell.execute_reply":"2025-05-01T08:02:48.561868Z"}},"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"      Video_ID                                            Comment\n0  yhrIGG4Uk8g                                                미쳒다\n1  yhrIGG4Uk8g                                    봐도모르겠넹 페이커캐릭이먼지\n2  yhrIGG4Uk8g  롤이라는 게임이 유명한 게임이라는것도 도움이 되었겠지만 우리나라 사람들이 게임 진짜...\n3  yhrIGG4Uk8g                                       전략은 피지컬을 이긴다\n4  yhrIGG4Uk8g                                     클템 해설 존나 듣기 싫다","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Video_ID</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>미쳒다</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>봐도모르겠넹 페이커캐릭이먼지</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>롤이라는 게임이 유명한 게임이라는것도 도움이 되었겠지만 우리나라 사람들이 게임 진짜...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>전략은 피지컬을 이긴다</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>yhrIGG4Uk8g</td>\n      <td>클템 해설 존나 듣기 싫다</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":54},{"cell_type":"code","source":"print(f\"movie data length: {len(movie_data)}\")\nprint(f\"comments data length: {len(comments)}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:48.563703Z","iopub.execute_input":"2025-05-01T08:02:48.564000Z","iopub.status.idle":"2025-05-01T08:02:48.582065Z","shell.execute_reply.started":"2025-05-01T08:02:48.563979Z","shell.execute_reply":"2025-05-01T08:02:48.581112Z"}},"outputs":[{"name":"stdout","text":"movie data length: 200000\ncomments data length: 38804\n","output_type":"stream"}],"execution_count":55},{"cell_type":"code","source":"# Merge two dataset because number of Comments dataset is not big enough to train word vectors.\ndf1_text = movie_data[['document']].rename(columns={'document': 'text'})\ndf2_text = comments[['Comment']].rename(columns={'Comment': 'text'})\n\n# merge movie_data and yt_comments_data\nmerged_df = pd.concat([df1_text, df2_text], ignore_index=True)\nmerged_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:48.583051Z","iopub.execute_input":"2025-05-01T08:02:48.583374Z","iopub.status.idle":"2025-05-01T08:02:48.670192Z","shell.execute_reply.started":"2025-05-01T08:02:48.583328Z","shell.execute_reply":"2025-05-01T08:02:48.669238Z"}},"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"                                                     text\n0                                     어릴때보고 지금다시봐도 재밌어요ㅋㅋ\n1       디자인을 배우는 학생으로, 외국디자이너와 그들이 일군 전통을 통해 발전해가는 문화산...\n2                    폴리스스토리 시리즈는 1부터 뉴까지 버릴께 하나도 없음.. 최고.\n3       와.. 연기가 진짜 개쩔구나.. 지루할거라고 생각했는데 몰입해서 봤다.. 그래 이런...\n4                             안개 자욱한 밤하늘에 떠 있는 초승달 같은 영화.\n...                                                   ...\n238799                                     와 3번째 렐플 예측지린다\n238800                            두번째 배수의 진 덫깔고 딜링하는거 미쳤다\n238801                                             와 잘한다😅\n238802                                              와 잘한다\n238803                                                 ㄷㄷ\n\n[238804 rows x 1 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>어릴때보고 지금다시봐도 재밌어요ㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>디자인을 배우는 학생으로, 외국디자이너와 그들이 일군 전통을 통해 발전해가는 문화산...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>폴리스스토리 시리즈는 1부터 뉴까지 버릴께 하나도 없음.. 최고.</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>와.. 연기가 진짜 개쩔구나.. 지루할거라고 생각했는데 몰입해서 봤다.. 그래 이런...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>안개 자욱한 밤하늘에 떠 있는 초승달 같은 영화.</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>238799</th>\n      <td>와 3번째 렐플 예측지린다</td>\n    </tr>\n    <tr>\n      <th>238800</th>\n      <td>두번째 배수의 진 덫깔고 딜링하는거 미쳤다</td>\n    </tr>\n    <tr>\n      <th>238801</th>\n      <td>와 잘한다😅</td>\n    </tr>\n    <tr>\n      <th>238802</th>\n      <td>와 잘한다</td>\n    </tr>\n    <tr>\n      <th>238803</th>\n      <td>ㄷㄷ</td>\n    </tr>\n  </tbody>\n</table>\n<p>238804 rows × 1 columns</p>\n</div>"},"metadata":{}}],"execution_count":56},{"cell_type":"code","source":"# NULL check\nprint(merged_df.isnull().values.any())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:48.673980Z","iopub.execute_input":"2025-05-01T08:02:48.674540Z","iopub.status.idle":"2025-05-01T08:02:48.697341Z","shell.execute_reply.started":"2025-05-01T08:02:48.674509Z","shell.execute_reply":"2025-05-01T08:02:48.696318Z"}},"outputs":[{"name":"stdout","text":"True\n","output_type":"stream"}],"execution_count":57},{"cell_type":"code","source":"merged_df = merged_df.dropna(how = 'any') # drop rows with null values\nprint(merged_df.isnull().values.any()) ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:48.698239Z","iopub.execute_input":"2025-05-01T08:02:48.698582Z","iopub.status.idle":"2025-05-01T08:02:48.777892Z","shell.execute_reply.started":"2025-05-01T08:02:48.698557Z","shell.execute_reply":"2025-05-01T08:02:48.776362Z"}},"outputs":[{"name":"stdout","text":"False\n","output_type":"stream"}],"execution_count":58},{"cell_type":"code","source":"print(len(merged_df)) ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:48.779040Z","iopub.execute_input":"2025-05-01T08:02:48.779399Z","iopub.status.idle":"2025-05-01T08:02:48.785492Z","shell.execute_reply.started":"2025-05-01T08:02:48.779368Z","shell.execute_reply":"2025-05-01T08:02:48.784501Z"}},"outputs":[{"name":"stdout","text":"238794\n","output_type":"stream"}],"execution_count":59},{"cell_type":"code","source":"# remove all characters other than Hangeul\nmerged_df['text'] = merged_df['text'].str.replace(\"[^ㄱ-ㅎㅏ-ㅣ가-힣 ]\",\"\", regex=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:48.786326Z","iopub.execute_input":"2025-05-01T08:02:48.786672Z","iopub.status.idle":"2025-05-01T08:02:49.731324Z","shell.execute_reply.started":"2025-05-01T08:02:48.786642Z","shell.execute_reply":"2025-05-01T08:02:49.730438Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_31/3907405017.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  merged_df['text'] = merged_df['text'].str.replace(\"[^ㄱ-ㅎㅏ-ㅣ가-힣 ]\",\"\", regex=True)\n","output_type":"stream"}],"execution_count":60},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"pip install konlpy","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:49.732004Z","iopub.execute_input":"2025-05-01T08:02:49.732236Z","iopub.status.idle":"2025-05-01T08:02:53.568538Z","shell.execute_reply.started":"2025-05-01T08:02:49.732216Z","shell.execute_reply":"2025-05-01T08:02:53.566894Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: konlpy in /usr/local/lib/python3.11/dist-packages (0.6.0)\nRequirement already satisfied: JPype1>=0.7.0 in /usr/local/lib/python3.11/dist-packages (from konlpy) (1.5.2)\nRequirement already satisfied: lxml>=4.1.0 in /usr/local/lib/python3.11/dist-packages (from konlpy) (5.3.1)\nRequirement already satisfied: numpy>=1.6 in /usr/local/lib/python3.11/dist-packages (from konlpy) (1.26.4)\nRequirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from JPype1>=0.7.0->konlpy) (24.2)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy>=1.6->konlpy) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy>=1.6->konlpy) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy>=1.6->konlpy) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy>=1.6->konlpy) (2025.1.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy>=1.6->konlpy) (2022.1.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy>=1.6->konlpy) (2.4.1)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy>=1.6->konlpy) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy>=1.6->konlpy) (2022.1.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy>=1.6->konlpy) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy>=1.6->konlpy) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy>=1.6->konlpy) (2024.2.0)\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}],"execution_count":61},{"cell_type":"code","source":"from konlpy.tag import Okt\nokt = Okt()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:53.570366Z","iopub.execute_input":"2025-05-01T08:02:53.570779Z","iopub.status.idle":"2025-05-01T08:02:53.578592Z","shell.execute_reply.started":"2025-05-01T08:02:53.570745Z","shell.execute_reply":"2025-05-01T08:02:53.577068Z"}},"outputs":[],"execution_count":62},{"cell_type":"code","source":"# NULL check\nprint(comments.isnull().values.any()) # => True\n\ncomments = comments.dropna(how = 'any') # drop rows with null values\n\nprint(comments.isnull().values.any()) # => False","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:53.580103Z","iopub.execute_input":"2025-05-01T08:02:53.580378Z","iopub.status.idle":"2025-05-01T08:02:53.638617Z","shell.execute_reply.started":"2025-05-01T08:02:53.580355Z","shell.execute_reply":"2025-05-01T08:02:53.637323Z"}},"outputs":[{"name":"stdout","text":"True\nFalse\n","output_type":"stream"}],"execution_count":63},{"cell_type":"code","source":"from konlpy.tag import Okt\nimport tqdm\n\nokt = Okt()\nstopwords = ['의','가','이','은','들','는','좀','잘','걍','과','도','를','으로','자','에','와','한','하다']\ntokenized_data = []\n\nfor sentence in tqdm.tqdm(comments['Comment']):\n    sent = str(sentence).strip()\n    if not sent:\n        continue\n\n    morphs = okt.morphs(sent, stem=True)\n    filtered = [\n        w for w in morphs\n        if w not in stopwords\n           and len(w) >= 2\n           and w.isalpha()\n    ]\n    # — 만약 원문에 '쵸비'가 있는데 토큰화에서 빠졌으면, 강제로 추가\n    if '쵸비' in sent and '쵸비' not in filtered:\n        filtered.append('쵸비')\n\n    if filtered:\n        tokenized_data.append(filtered)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:04:25.193660Z","iopub.execute_input":"2025-05-01T08:04:25.194019Z","iopub.status.idle":"2025-05-01T08:08:09.656581Z","shell.execute_reply.started":"2025-05-01T08:04:25.193999Z","shell.execute_reply":"2025-05-01T08:08:09.655617Z"}},"outputs":[{"name":"stderr","text":"100%|██████████| 38802/38802 [03:44<00:00, 172.88it/s] \n","output_type":"stream"}],"execution_count":66},{"cell_type":"code","source":"pip install gensim","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:10:02.516650Z","iopub.execute_input":"2025-05-01T08:10:02.517130Z","iopub.status.idle":"2025-05-01T08:10:06.361427Z","shell.execute_reply.started":"2025-05-01T08:10:02.517099Z","shell.execute_reply":"2025-05-01T08:10:06.359835Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: gensim in /usr/local/lib/python3.11/dist-packages (4.3.3)\nRequirement already satisfied: numpy<2.0,>=1.18.5 in /usr/local/lib/python3.11/dist-packages (from gensim) (1.26.4)\nRequirement already satisfied: scipy<1.14.0,>=1.7.0 in /usr/local/lib/python3.11/dist-packages (from gensim) (1.13.1)\nRequirement already satisfied: smart-open>=1.8.1 in /usr/local/lib/python3.11/dist-packages (from gensim) (7.1.0)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy<2.0,>=1.18.5->gensim) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy<2.0,>=1.18.5->gensim) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy<2.0,>=1.18.5->gensim) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy<2.0,>=1.18.5->gensim) (2025.1.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy<2.0,>=1.18.5->gensim) (2022.1.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy<2.0,>=1.18.5->gensim) (2.4.1)\nRequirement already satisfied: wrapt in /usr/local/lib/python3.11/dist-packages (from smart-open>=1.8.1->gensim) (1.17.2)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy<2.0,>=1.18.5->gensim) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy<2.0,>=1.18.5->gensim) (2022.1.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy<2.0,>=1.18.5->gensim) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy<2.0,>=1.18.5->gensim) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy<2.0,>=1.18.5->gensim) (2024.2.0)\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}],"execution_count":67},{"cell_type":"code","source":"from gensim.models import Word2Vec\n\n# 희귀 단어도 포함하려면 min_count=1\nmodel = Word2Vec(\n    sentences=tokenized_data,\n    vector_size=100,\n    window=5,\n    min_count=1,    # 등장 1회 이상인 단어 전부 포함\n    workers=4,\n    sg=0            # CBOW (원하면 sg=1 skip-gram으로 바꿀 수도 있습니다)\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:10:32.498678Z","iopub.execute_input":"2025-05-01T08:10:32.499096Z","iopub.status.idle":"2025-05-01T08:10:34.878959Z","shell.execute_reply.started":"2025-05-01T08:10:32.499066Z","shell.execute_reply":"2025-05-01T08:10:34.878076Z"}},"outputs":[],"execution_count":68},{"cell_type":"code","source":"model.wv.vectors.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:10:45.283762Z","iopub.execute_input":"2025-05-01T08:10:45.285004Z","iopub.status.idle":"2025-05-01T08:10:45.292111Z","shell.execute_reply.started":"2025-05-01T08:10:45.284967Z","shell.execute_reply":"2025-05-01T08:10:45.290719Z"}},"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"(21892, 100)"},"metadata":{}}],"execution_count":69},{"cell_type":"code","source":"print(model.wv.most_similar(\"쵸비\"))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:10:46.681124Z","iopub.execute_input":"2025-05-01T08:10:46.681496Z","iopub.status.idle":"2025-05-01T08:10:46.701968Z","shell.execute_reply.started":"2025-05-01T08:10:46.681468Z","shell.execute_reply":"2025-05-01T08:10:46.700972Z"}},"outputs":[{"name":"stdout","text":"[('쇼메', 0.979989767074585), ('디디', 0.9736258387565613), ('기인', 0.9672659635543823), ('캐다', 0.9584211111068726), ('메이커', 0.9582531452178955), ('데프트', 0.956555962562561), ('피넛', 0.947786271572113), ('도란', 0.9447104334831238), ('대단하다', 0.9438278675079346), ('차이', 0.9430277943611145)]\n","output_type":"stream"}],"execution_count":70},{"cell_type":"code","source":"print(model.wv.most_similar(\"기인\"))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:10:49.385141Z","iopub.execute_input":"2025-05-01T08:10:49.385556Z","iopub.status.idle":"2025-05-01T08:10:49.394035Z","shell.execute_reply.started":"2025-05-01T08:10:49.385529Z","shell.execute_reply":"2025-05-01T08:10:49.392770Z"}},"outputs":[{"name":"stdout","text":"[('좋아하다', 0.9823325276374817), ('도란', 0.9822273254394531), ('정말', 0.9802008867263794), ('우리', 0.9795771837234497), ('멤버', 0.9792604446411133), ('데프트', 0.9789137244224548), ('대단하다', 0.9784928560256958), ('다음', 0.9783226847648621), ('기대', 0.9781405925750732), ('그래도', 0.9776440858840942)]\n","output_type":"stream"}],"execution_count":71},{"cell_type":"code","source":"model.wv.save_word2vec_format('ko_w2v')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:10:50.799962Z","iopub.execute_input":"2025-05-01T08:10:50.800933Z","iopub.status.idle":"2025-05-01T08:10:52.400643Z","shell.execute_reply.started":"2025-05-01T08:10:50.800895Z","shell.execute_reply":"2025-05-01T08:10:52.399669Z"}},"outputs":[],"execution_count":72},{"cell_type":"code","source":"!python -m gensim.scripts.word2vec2tensor --input ko_w2v --output ko_w2v","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:10:57.200244Z","iopub.execute_input":"2025-05-01T08:10:57.200586Z","iopub.status.idle":"2025-05-01T08:11:12.235855Z","shell.execute_reply.started":"2025-05-01T08:10:57.200563Z","shell.execute_reply":"2025-05-01T08:11:12.234257Z"}},"outputs":[],"execution_count":73},{"cell_type":"code","source":"from IPython.display import FileLink\n\nFileLink(\"ko_w2v_metadata.tsv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:11:24.400549Z","iopub.execute_input":"2025-05-01T08:11:24.401709Z","iopub.status.idle":"2025-05-01T08:11:24.409863Z","shell.execute_reply.started":"2025-05-01T08:11:24.401670Z","shell.execute_reply":"2025-05-01T08:11:24.408960Z"}},"outputs":[{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"/kaggle/working/ko_w2v_metadata.tsv","text/html":"<a href='ko_w2v_metadata.tsv' target='_blank'>ko_w2v_metadata.tsv</a><br>"},"metadata":{}}],"execution_count":74},{"cell_type":"code","source":"FileLink(\"ko_w2v_metadata.tsv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:11:25.544302Z","iopub.execute_input":"2025-05-01T08:11:25.544629Z","iopub.status.idle":"2025-05-01T08:11:25.551968Z","shell.execute_reply.started":"2025-05-01T08:11:25.544607Z","shell.execute_reply":"2025-05-01T08:11:25.550679Z"}},"outputs":[{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"/kaggle/working/ko_w2v_metadata.tsv","text/html":"<a href='ko_w2v_metadata.tsv' target='_blank'>ko_w2v_metadata.tsv</a><br>"},"metadata":{}}],"execution_count":75},{"cell_type":"markdown","source":"# Visualization for embedding","metadata":{}},{"cell_type":"code","source":"## Go to https://projector.tensorflow.org/\n## and load ko_w2v_tensor.tsv and ko_w2v_metadata.tsv","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-01T08:02:53.723214Z","iopub.status.idle":"2025-05-01T08:02:53.723634Z","shell.execute_reply.started":"2025-05-01T08:02:53.723425Z","shell.execute_reply":"2025-05-01T08:02:53.723442Z"}},"outputs":[],"execution_count":null}]}